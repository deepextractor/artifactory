name: Building Lambda Functions

on:
  push:
    branches:
      - main

jobs:
  build-java-lambda-hello:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'java-lambda-hello')
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build java-lambda-hello
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LAMBDA_ARTIFACT: java-lambda-hello
          JAVA_LAMBDA_VERSION: 1.0.7
        run: |
          bash deployment/scripts/maven_build.sh "$LAMBDA_ARTIFACT" "$JAVA_LAMBDA_VERSION"
          bash deployment/scripts/update_lambda_versions.sh "$LAMBDA_ARTIFACT" "$JAVA_LAMBDA_VERSION"

  build-java-lambda-sum:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'java-lambda-sum')
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build java-lambda-sum
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LAMBDA_ARTIFACT: java-lambda-sum
          JAVA_LAMBDA_VERSION: 1.0.10
        run: |
          bash deployment/scripts/maven_build.sh "$LAMBDA_ARTIFACT" "$JAVA_LAMBDA_VERSION"
          bash deployment/scripts/update_lambda_versions.sh "$LAMBDA_ARTIFACT" "$JAVA_LAMBDA_VERSION"

  build-frontend:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'frontend')
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.15.0'
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install zip -y
      - name: Build frontend
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd frontend
          bash ../deployment/scripts/frontend_build.sh

  build-python-lambda:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'python-lambda')
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./lambdas/python_lambda
          push: true
          tags: ghcr.io/${{ github.repository }}/python-lambda:latest
